{"version":3,"sources":["components/profilePic/profilePictureV2.jpg","components/projects/buyerspace.png","components/projects/hypecooker.png","components/projects/collab.png","components/links/KyleChanCoOp2017.pdf","components/profilePic/profilePic.js","components/aboutMe/aboutMe.js","components/projects/project.js","components/projects/projects.js","constants/projectsConstants.js","components/links/links.js","components/contactBox/contactBox.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ProfilePic","react_default","a","createElement","className","src","profilePicture","alt","Component","AboutMe","this","renderAboutMeBody","Project","props","title","href","githubURL","content","photo","Projects","projects_project","Buyerspace","Hypecooker","Collab","Links","aria-label","target","rel","Resume","ContactBox","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","active","submitted","renderContent","onClick","handleSubmit","bind","value","disabled","handleCancel","_this2","type","name","onChange","e","setState","email","body","renderSubmitButton","activateButton","event","_this3","payload","mail","source","time","Date","toLocaleString","timeZone","key","fetch","process","REACT_APP_MAILER","method","headers","Content-Type","Accept","JSON","stringify","then","res","console","log","catch","error","App","profilePic_profilePic","links","contactBox_contactBox","components_aboutMe_aboutMe","projects_projects","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","src_App_0","document","getElementById","URL","origin","addEventListener","concat","response","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.08fee0fe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profilePictureV2.233a129d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/buyerspace.ebee3e35.png\";","module.exports = __webpack_public_path__ + \"static/media/hypecooker.76ea92a5.png\";","module.exports = __webpack_public_path__ + \"static/media/collab.b59b6892.png\";","module.exports = __webpack_public_path__ + \"static/media/KyleChanCoOp2017.94fff01f.pdf\";","import React, { Component } from 'react';\nimport profilePicture from './profilePictureV2.jpg'\nimport './profilePic.css';\n\nclass ProfilePic extends Component {\n  render() {\n    return (\n        <div className=\"profilepic\">\n          <img src={profilePicture} className=\"profilepicture\" alt=\"Kyle\"/>\n        </div>\n    );\n  }\n}\n\nexport default ProfilePic;\n","import React, { Component } from 'react';\nimport './aboutMe.css';\n\nclass AboutMe extends Component {\n  renderAboutMeBody() {\n    const aboutMe = `I'm a full stack software engineer with experience in Ruby\n    on Rails, ReactJS, and Elixir! I was born and raised in NYC but now I'm in Boston in my\n    4th year at Northeastern University working on my Bachelor's degree in\n    computer science and finance. I have experience as a full stack software engineer\n    at Forward Financing and as a QA engineer at Jobcase.`\n    const interests = `Talk to me about cars, food, sneakers, the latest\n    streetwear drops, and anything tech related!`\n    const opportunities = `I'm open to any new opportunties\n    so feel free to contact me about your ideas!`\n    return (\n      <div className=\"aboutme__body is-size-5\">\n        <p className=\"aboutme__text\">{aboutMe}</p>\n        <p className=\"aboutme__text\">{interests}</p>\n        <p className=\"aboutme__text\">{opportunities}</p>\n      </div>\n    )\n  }\n  render() {\n    return (\n      <div className=\"aboutme has-text-left\">\n        <h2 className=\"aboutme__header title\">\n          whoami\n        </h2>\n      {this.renderAboutMeBody()}\n      </div>\n    );\n  }\n}\n\nexport default AboutMe;\n","import React, { Component } from 'react';\nimport './project.css'\n\nclass Project extends Component {\n\n  render() {\n    return (\n      <div className=\"project\">\n        <div className=\"columns is-desktop\">\n          <div className=\"column\">\n            <p className=\"is-size-3\">{this.props.title}</p>\n            <a href={this.props.githubURL}><span className=\"icon is-small has-text-black\"><i className=\"fab fa-github\"></i></span></a>\n            <p className=\"is-size-5 has-text-grey\">{this.props.content}</p>\n          </div>\n          <div className=\"column\">\n            <img className=\"project-photo\" src={this.props.photo} alt=\"Buyerspace\"/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Project;\n","import React, { Component } from 'react';\nimport Project from './project';\nimport Buyerspace from './buyerspace.png';\nimport Hypecooker from './hypecooker.png';\nimport Collab from './collab.png';\nimport * as ProjectsConstants from '../../constants/projectsConstants';\nimport './projects.css';\n\nclass Projects extends Component {\n  render() {\n    return (\n      <div className=\"projects has-text-left\">\n        <h1 className=\"title\">Projects</h1>\n        <Project className=\"project\"\n          githubURL=\"https://github.com/kyle-ch/Buyerspace\"\n          title=\"Buyerspace\"\n          content={ProjectsConstants.buyerspaceContent}\n          photo={Buyerspace}\n        />\n        <Project className=\"project\"\n          githubURL=\"https://github.com/kyle-ch/hypecooker\"\n          title=\"Hypecooker\"\n          content={ProjectsConstants.hypecookerContent}\n          photo={Hypecooker}\n        />\n        <Project className=\"project\"\n          githubURL=\"https://github.com/kyle-ch/Collab\"\n          title=\"Collab\"\n          content={ProjectsConstants.collabContent}\n          photo={Collab}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Projects;\n","export const buyerspaceContent = `Buyerspace takes the traditional online marketplace\n                                  turns it upside down by empowering buyers. Buyers\n                                  put out listings for items they are looking for and\n                                  sellers can offer them a price if they have the item\n                                  for the buyer. This was the final project for\n                                  my Database Design course using mySQL to organize\n                                  all the data in the marketplace between users,\n                                  listings, offers, user ratings, and hashtags. I\n                                  decided to write this app in Ruby on Rails to\n                                  improve my Rails skills, as well as my overall\n                                  skill as a full stack engineer.`;\n\nexport const hypecookerContent = `Hypecooker is a bot for the popular clothing\n                                  retailer, Supreme. New items from Supreme drop\n                                  every Thursday morning and sell out within\n                                  seconds because of other bots. Those items then\n                                  resell for a hefty premium on secondary markets.\n                                  I combined my experience from being a QA engineer\n                                  at Jobcase and my love of streetwear and\n                                  used Selenium to write this open source bot\n                                  to automate the checkout process for buyers that\n                                  want to buy items without going through resellers.\n                                  This Java app has a UI for users to specify which\n                                  items they want to add to their cart and enter in\n                                  their checkout information. Users may add multiple\n                                  items to their carts. Once the user hits the button\n                                  to start the automation, the script will go to each\n                                  item, add the item to the cart, and check out as soon\n                                  as possible.`\n\nexport const collabContent = `Collab is a personal project I did to learn Ruby\n                              on Rails and learn to use external APIs. This project\n                              uses a gem that wraps the Spotify API. Collab allows users\n                              to search for 2 of their favorite artists and then searches\n                              their songs on Spotify and makes a list of songs that they\n                              have appeared on collaboratively. The user then has the ability\n                              to click a button to login and have a playlist with that list of\n                              songs on their Spotify Though it looks very crude, I was very\n                              proud of this project because I learned a great deal throughout\n                              the development process. It was my first Ruby on Rails from start\n                              to finish and I was very excited to show it off to others to showcase\n                              my love for music and my growth as a developer.`\n","import React, { Component } from 'react';\nimport Resume from './KyleChanCoOp2017.pdf';\n\nclass Links extends Component {\n  render() {\n    return (\n        <div className=\"links breadcrumb is-centered\" aria-label=\"breadcrumbs\">\n          <ul>\n            <li><a href=\"https://github.com/kyle-ch\" target=\"_blank\" rel=\"noopener noreferrer\"><span className=\"icon is-small\"><i className=\"fab fa-github\"></i></span></a></li>\n            <li><a href={Resume} target=\"_blank\" rel=\"noopener noreferrer\"><span className=\"icon is-small\"><i className=\"fas fa-file-alt\"></i></span></a></li>\n            <li><a href=\"https://www.linkedin.com/in/kyle-ch\" target=\"_blank\" rel=\"noopener noreferrer\"><span className=\"icon is-small\"><i className=\"fab fa-linkedin\"></i></span></a></li>\n          </ul>\n        </div>\n    );\n  }\n}\n\nexport default Links;\n","import React, { Component } from 'react';\nimport './contactBox.css';\n\nclass ContactBox extends Component {\n  constructor() {\n    super();\n    this.state = {\n      active: false,\n      submitted: false\n    }\n  }\n\n  render() {\n    return this.renderContent();\n  }\n\n  renderSubmitButton() {\n    if (this.state.submitted) {\n      return (\n        <div>\n          <button onClick={this.handleSubmit.bind(this)} className=\"button contact-box-button\" value=\"Submit\" disabled=\"true\">Submit</button>\n          <p>Thank you!</p>\n          <p>I will get back to you shortly!</p>\n        </div>\n      )\n    }\n    else {\n      return (\n        <div className=\"contact-box-buttons\">\n          <button onClick={this.handleCancel.bind(this)} className=\"button contact-box-button\" value=\"Cancel\">Cancel</button>\n          <button onClick={this.handleSubmit.bind(this)} className=\"button contact-box-button\" value=\"Submit\">Submit</button>\n        </div>\n      )\n    }\n  }\n\n  renderContent() {\n    if (this.state.active) {\n      return (\n        <div className=\"contact-box-container\">\n          <form className=\"contact-box\">\n            <label className=\"contact-box contact-box-label\">\n              Name:\n              <input className=\"contact-box contact-box-text\"\n                type=\"text\" value={this.state.name}\n                onChange={ e => this.setState({ name : e.target.value }) }/>\n            </label>\n            <label className=\"contact-box contact-box-label\">\n              Email:\n              <input className=\"contact-box contact-box-text\"\n              type=\"text\" value={this.state.email}\n              onChange={ e => this.setState({ email : e.target.value }) }/>\n            </label>\n            <label className=\"contact-box contact-box-label\">\n              Message:\n              <textarea className=\"contact-box contact-box-text contact-box-text-message\"\n              value={this.state.body}\n              onChange={ e => this.setState({ body : e.target.value }) }/>\n            </label>\n          </form>\n          <div className=\"contact-box\">\n            {this.renderSubmitButton()}\n          </div>\n        </div>\n      )\n    }\n    else {\n      return (\n        <button onClick={this.activateButton.bind(this)} className=\"button contact-box-button\" value=\"Contact\">Contact Me</button>\n      )\n    }\n  }\n\n  activateButton(event) {\n    this.setState({active : true});\n  }\n\n  handleCancel(event) {\n    this.setState({ active: false });\n  }\n\n  handleSubmit(event) {\n    const payload = {\n      \"mail\":{\n        \"source\":\"Personal Website Contact Box\",\n        \"name\":this.state.name,\n        \"body\":this.state.body,\n        \"time\":new Date().toLocaleString('en-US', { timeZone: 'UTC'}),\n        \"key\":\"c0zrj7bxf6\"\n        }\n    }\n    fetch(process.env.REACT_APP_MAILER, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify(payload)\n    }).then(res => {\n      console.log(res);\n      this.setState({submitted : true});\n    }).catch(error => {\n      console.log(error);\n    })\n  }\n}\n\nexport default ContactBox;\n","import React, { Component } from 'react';\nimport ProfilePic from './components/profilePic/profilePic';\nimport AboutMe from './components/aboutMe/aboutMe';\nimport Projects from './components/projects/projects';\nimport Links from './components/links/links';\nimport ContactBox from './components/contactBox/contactBox'\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App columns\">\n        <div className=\"App-header column is-one-quarter-desktop\">\n          <div className=\"fixed\">\n            <ProfilePic/>\n            <h1 className=\"App-title is-size-2 has-white-text-ter\">{\"Kyle Chan\"}</h1>\n            <Links/>\n            <ContactBox/>\n          </div>\n        </div>\n        <div className=\"column\">\n          <AboutMe/>\n          <Projects/>\n          <footer className=\"simpleFooter\">\n            <a href=\"https://github.com/kyle-ch/kyle-ch.github.io\">Source</a>\n          </footer>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}